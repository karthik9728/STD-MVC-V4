@using BookStore.Entites
@model IEnumerable<Cart>

@{
    ViewData["Title"] = "Index";
}

<table class="table table-bordered">
    <thead>
        <tr>

            <th>
                @Html.DisplayNameFor(model => model.BookName)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalAmount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>


                <td>
                    @Html.DisplayFor(modelItem => item.BookName)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalAmount)
                </td>
                <td>
                    @Html.ActionLink("Edit Qty", "Edit", new { id = item.Id }) |
                    |
                    @Html.ActionLink("Delete Item", "Delete", new { id = item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>
<div>
    Grand Total:  @Model.Sum(x => x.TotalAmount)
</div>
@{
    var GrandTotal = @Model.Sum(x => x.TotalAmount);
}
<div>
    <form asp-action="AddressDetail" asp-controller="Cart">
        <input type="hidden" asp-for="@GrandTotal" />
        <input type="Submit" value="Proced To payment" class="btn btn-primary" />
    </form>
</div>

